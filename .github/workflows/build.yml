name: "Build"

on:
  push:
    branches:
      - main
    paths:
      - adb/**/*
      - src/**/*
      - tango-bridge.app/**/*
      - build.rs
      - Cargo.toml
      - Cargo.lock
  workflow_dispatch:

jobs:
  windows:
    strategy:
      matrix:
        include:
          - { arch: i686 }
          - { arch: x86_64 }
    name: "Windows ${{ matrix.arch }}"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Cargo packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: windows-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-${{ matrix.arch }}-cargo-

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.arch }}-pc-windows-msvc

      - name: Build
        run: cargo build --target ${{ matrix.arch }}-pc-windows-msvc --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}
          path: "target/${{ matrix.arch }}-pc-windows-msvc/release/tango_bridge.exe"

  linux-x64:
    name: "Linux x64"
    runs-on: ubuntu-latest
    steps:
      - name: Install native dependencies
        run: sudo apt update && sudo apt install --no-install-recommends libgtk-3-dev libappindicator3-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Cargo packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-cargo-

      - name: Install Rust toolchain
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Build
        run: cargo build --target x86_64-unknown-linux-gnu --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job}}
          path: "target/x86_64-unknown-linux-gnu/release/tango_bridge"

  macos-builds:
    strategy:
      matrix:
        include:
          - { os: macos-latest, arch: aarch64 }
          - { os: macos-13, arch: x86_64 }
    name: "macOS ${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Cargo packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: macos-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            macos-${{ matrix.arch }}-cargo-

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.arch }}-apple-darwin

      - name: Build
        run: cargo build --target ${{ matrix.arch }}-apple-darwin --release
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.13

      - name: Prepare artifact
        run: |
          cp target/${{ matrix.arch }}-apple-darwin/release/tango_bridge tango-bridge.app/Contents/MacOS/tango-bridge
          # compress the folder because `actions/upload-artifact` doesn't preserve executable permissions
          zip -r macos-${{ matrix.arch }}.zip tango-bridge.app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}
          path: macos-${{ matrix.arch }}.zip

  macos-universal:
    name: "macOS Universal"
    runs-on: macos-latest
    needs:
      - macos-builds
    steps:
      - name: Download macos-x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-x86_64
          path: macos-x86_64-artifact

      - name: Download macos-aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-aarch64
          path: macos-aarch64-artifact

      - name: Unzip artifacts
        run: |
          unzip macos-x86_64-artifact/macos-x86_64.zip -d macos-x86_64
          unzip macos-aarch64-artifact/macos-aarch64.zip -d macos-aarch64

      - name: Create universal binary
        run: |
          lipo -create -output tango-bridge-universal macos-x86_64/tango-bridge.app/Contents/MacOS/tango-bridge macos-aarch64/tango-bridge.app/Contents/MacOS/tango-bridge

      - name: Prepare artifact
        run: |
          cp -f tango-bridge-universal macos-x86_64/tango-bridge.app/Contents/MacOS/tango-bridge
          # compress the folder because `actions/upload-artifact` doesn't preserve executable permissions
          zip -r macos-universal.zip macos-x86_64/tango-bridge.app

      - name: Upload macos-universal artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job}}
          path: macos-universal.zip
